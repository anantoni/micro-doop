/***************************************************
 * Variables
 ***************************************************/

Stats:Simple:InsensVarPointsTo(?heap, ?var) ->
  HeapAllocationRef(?heap), VarRef(?var).
Stats:Simple:InsensVarPointsTo(?heap, ?var) <-
  VarPointsTo( ?heap,  ?var).

Stats:Simple:ReachableVar(?var) ->
  VarRef(?var).
Stats:Simple:ReachableVar( ?var ) <-
  Reachable( ?method ), Var:DeclaringMethod(?var, ?method).

Stats:Simple:InsensReachableVar(?var) -> VarRef(?var).
Stats:Simple:InsensReachableVar(?var) <-
  Stats:Simple:ReachableVar( ?var ).

/***************************************************
 * Arrays
 ***************************************************/
/*
Stats:Simple:InsensArrayIndexPointsTo(?heap, ?baseheap) ->
  HeapAllocationRef(?heap), HeapAllocationRef(?baseheap).
Stats:Simple:InsensArrayIndexPointsTo(?heap, ?baseheap) <-
  ArrayIndexPointsTo(_,?heap,_,?baseheap).
/
/***************************************************
 * Fields
 ***************************************************/

Stats:Simple:InsensInstanceFieldPointsTo(?heap, ?sig, ?baseheap) ->
  HeapAllocationRef(?heap), 
  FieldSignatureRef(?sig), 
  HeapAllocationRef(?baseheap).

Stats:Simple:InsensInstanceFieldPointsTo( ?heapbase, ?fieldsig, ?heap ) <-
  InstanceFieldPointsTo( ?heapbase, ?fieldsig, ?heap ).

Stats:Simple:InsensStaticFieldPointsTo(?heap, ?sig) ->
  FieldSignatureRef( ?sig ), 
  HeapAllocationRef( ?heap ).
Stats:Simple:InsensStaticFieldPointsTo(  ?heap, ?sig ) <-
  StaticFieldPointsTo(    ?heap, ?sig ).

/***************************************************
 * Call graph edges
 ***************************************************/

Stats:Simple:InsensCallGraphEdge(?from, ?to) ->
  CallGraphEdgeSourceRef(?from), MethodSignatureRef(?to).
Stats:Simple:InsensCallGraphEdge(?from, ?to) <-
  CallGraphEdge( ?from, ?to ).

/*Stats:Simple:InsensNativeCallGraphEdge(?from, ?to) ->
*  MethodSignatureRef(?from), MethodSignatureRef(?to).
*Stats:Simple:InsensNativeCallGraphEdge(?from, ?to) <-
*  NativeCallGraphEdge(_, ?from, _, ?to).
*/
